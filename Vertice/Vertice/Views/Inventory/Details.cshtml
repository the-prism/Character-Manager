@model Vertice.Models.InventoryModel

@{
    ViewData["Title"] = "Details";
}

<h1>@Html.DisplayFor(model => model.Character.CharacterName)</h1>

<div>
    <h4>Inventory</h4>
    <hr />

    <table class="table table-hover">
        <thead class="thead-dark">
            <tr class="d-flex">
                <th scope="col" class="col-8">@Html.DisplayNameFor(model => model.Items[0].Name)</th>
                <th scope="col" class="col-2">@Html.DisplayNameFor(model => model.Items[0].Value)</th>
                <th scope="col" class="col-2">@Html.DisplayNameFor(model => model.Items[0].Weight)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr class="d-flex">
                    <td class="col-8">@Html.DisplayFor(modelItem => item.Name)</td>
                    <td class="col-2">@Html.DisplayFor(modelItem => item.Value)</td>
                    <td class="col-2">@Html.DisplayFor(modelItem => item.Weight)</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.InventoryId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
